//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer $Globals
{
    float2  iResolution = { 300 };      // Offset:    0, size:    8
}

cbuffer cbPerObject
{
    float4x4 gWorldViewProj;            // Offset:    0, size:   64
    float   globalTime;                 // Offset:   64, size:    4
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 ColorTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorldViewProj;           // Offset:    0 Size:    64
                //   float globalTime;                  // Offset:   64 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.Pos.x; v0.y <- vin.Pos.y; v0.z <- vin.Pos.z; 
                //   v1.x <- vin.Color.x; v1.y <- vin.Color.y; v1.z <- vin.Color.z; v1.w <- vin.Color.w; 
                //   o1.x <- <VS return value>.Color.x; o1.y <- <VS return value>.Color.y; o1.z <- <VS return value>.Color.z; o1.w <- <VS return value>.Color.w; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 33 "D:\School\HvA_jaar_3\Game Technology\Advanced Graphics Programming\AGPGT\LunaCh1_10\Chapter 6 Drawing in Direct3D\Shapes\FX\color.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosH.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosH.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosH.z
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // r1.w <- vout.PosH.w
                
                #line 36
                mov r0.xyzw, v1.xyzw  // r0.x <- vout.Color.x; r0.y <- vout.Color.y; r0.z <- vout.Color.z; r0.w <- vout.Color.w
                mov o0.xyzw, r1.xyzw
                mov o1.xyzw, r0.xyzw
                ret 
                // Approximately 10 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float2 iResolution;                // Offset:    0 Size:     8
                //      = 0x43960000 0x43960000 
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorldViewProj;           // Offset:    0 Size:    64 [unused]
                //   float globalTime;                  // Offset:   64 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // $Globals                          cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xy  
                // COLOR                    0   xyzw        1     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[1], immediateIndexed
                dcl_constantbuffer cb1[5], immediateIndexed
                dcl_input_ps_siv linear noperspective v0.xy, position
                dcl_output o0.xyzw
                dcl_temps 7
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.Color.x; v1.y <- pin.Color.y; v1.z <- pin.Color.z; v1.w <- pin.Color.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 72 "D:\School\HvA_jaar_3\Game Technology\Advanced Graphics Programming\AGPGT\LunaCh1_10\Chapter 6 Drawing in Direct3D\Shapes\FX\color.fx"
                utof r0.x, l(0)  // r0.x <- seedling
                
                #line 123
                mov r0.y, cb1[4].x  // r0.y <- iGlobalTime
                
                #line 126
                div r0.zw, v0.xxxy, cb0[0].xxxy  // r0.z <- uv.x; r0.w <- uv.y
                
                #line 133
                mov r1.x, l(1.000000)  // r1.x <- ifs
                mov r1.y, l(0)  // r1.y <- depth
                
                #line 138
                mov r1.z, l(0)  // r1.z <- i
                itof r1.z, r1.z
                mul r1.z, r1.z, l(123456.125000)
                frc r1.z, r1.z
                add r0.x, r0.x, r1.z
                nop 
                mov r0.zw, r0.zzzw
                div r2.xy, l(0.500000, 0.500000, 0.000000, 0.000000), cb0[0].xyxx
                
                #line 98
                add r1.zw, r0.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // r1.z <- a.x; r1.w <- a.y
                mov r2.z, l(0)
                add r3.xy, r0.zwzz, r2.xzxx  // r3.x <- b.x; r3.y <- b.y
                add r3.zw, r0.zzzw, r2.xxxy  // r3.z <- c.x; r3.w <- c.y
                add r2.zw, r0.zzzw, r2.zzzy  // r2.z <- d.x; r2.w <- d.y
                nop 
                mov r1.zw, r1.zzzw
                
                #line 85
                add r4.x, r0.y, l(12345.123047)
                mul r4.x, r4.x, l(1.943660)
                div r4.x, r4.x, l(3.141593)
                div r4.x, r4.x, l(2.000000)
                sincos r4.x, null, r4.x
                mul r4.x, r4.x, l(2.000000)
                add r4.x, r4.x, l(2.500000)  // r4.x <- zoom
                nop 
                mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
                mov r4.yz, l(-0.000000,-1.000000,-1.000000,-0.000000)
                add r1.zw, r1.zzzw, r4.yyyz
                mul r1.zw, r1.zzzw, r4.xxxx
                
                #line 76
                add r4.x, r0.y, l(12345.123047)
                mul r4.x, r4.x, l(1.191551)
                div r4.x, r4.x, l(3.141593)
                div r4.x, r4.x, l(2.000000)
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.191551)
                div r4.z, r4.z, l(3.141593)
                div r4.z, r4.z, l(2.000000)
                mul r4.z, r4.z, l(1.618034)
                div r4.y, r4.z, l(2.718282)
                add r4.xy, r0.xxxx, r4.xyxx
                sincos r4.xy, null, r4.xyxx
                mul r4.xy, r4.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r4.x <- a.x; r4.y <- a.y
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.509861)
                div r4.z, r4.z, l(3.141593)
                div r5.x, r4.z, l(2.000000)
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.509861)
                div r4.z, r4.z, l(3.141593)
                div r4.z, r4.z, l(2.000000)
                mul r4.z, r4.z, l(1.618034)
                div r5.y, r4.z, l(2.718282)
                add r4.zw, r0.xxxx, r5.xxxy
                sincos r4.zw, null, r4.zzzw
                mul r4.zw, r4.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)  // r4.z <- b.x; r4.w <- b.y
                add r5.x, r0.y, l(12345.123047)
                mul r5.x, r5.x, l(1.828171)
                div r5.x, r5.x, l(3.141593)
                div r5.x, r5.x, l(2.000000)
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.828171)
                div r5.z, r5.z, l(3.141593)
                div r5.z, r5.z, l(2.000000)
                mul r5.z, r5.z, l(1.618034)
                div r5.y, r5.z, l(2.718282)
                add r5.xy, r0.xxxx, r5.xyxx
                sincos r5.xy, null, r5.xyxx
                mul r5.xy, r5.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r5.x <- c.x; r5.y <- c.y
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.853519)
                div r5.z, r5.z, l(3.141593)
                div r6.x, r5.z, l(2.000000)
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.853519)
                div r5.z, r5.z, l(3.141593)
                div r5.z, r5.z, l(2.000000)
                mul r5.z, r5.z, l(1.618034)
                div r6.y, r5.z, l(2.718282)
                add r5.zw, r0.xxxx, r6.xxxy
                sincos r5.zw, null, r5.zzzw
                mul r5.zw, r5.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)  // r5.z <- d.x; r5.w <- d.y
                nop 
                nop 
                mov r1.zw, r1.zzzw
                mov r4.xy, r4.xyxx
                
                #line 63
                mul r6.x, r1.z, r4.x
                mul r6.y, r1.w, r4.y
                mov r6.y, -r6.y
                add r6.x, r6.y, r6.x  // r6.x <- <cmul return value>.x
                mul r4.x, r1.w, r4.x
                mul r4.y, r1.z, r4.y
                add r6.y, r4.y, r4.x  // r6.y <- <cmul return value>.y
                
                #line 80
                add r4.xy, r4.zwzz, r6.xyxx
                nop 
                mov r5.xy, r5.xyxx
                
                #line 63
                mul r4.z, r1.z, r5.x
                mul r4.w, r1.w, r5.y
                mov r4.w, -r4.w
                add r6.x, r4.w, r4.z
                mul r1.w, r1.w, r5.x
                mul r1.z, r1.z, r5.y
                add r6.y, r1.z, r1.w
                
                #line 80
                add r1.zw, r5.zzzw, r6.xxxy
                
                #line 67
                mul r4.z, r1.z, r4.x
                mul r4.w, r1.w, r4.y
                add r5.x, r4.w, r4.z
                mul r4.y, r1.z, r4.y
                mul r4.x, r1.w, r4.x
                mov r4.x, -r4.x
                add r5.y, r4.x, r4.y
                dp2 r1.z, r1.zwzz, r1.zwzz
                div r1.zw, r5.xxxy, r1.zzzz  // r1.z <- <cdiv return value>.x; r1.w <- <cdiv return value>.y
                
                #line 80
                mov r1.zw, r1.zzzw  // r1.z <- <mobius return value>.x; r1.w <- <mobius return value>.y
                
                #line 86
                mov r1.zw, r1.zzzw  // r1.z <- mob.x; r1.w <- mob.y
                mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
                mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 3.141593, 3.141593)  // r1.z <- <map return value>.x; r1.w <- <map return value>.y
                
                #line 103
                mov r1.zw, r1.zzzw  // r1.z <- ma.x; r1.w <- ma.y
                nop 
                mov r3.xy, r3.xyxx
                
                #line 85
                add r4.x, r0.y, l(12345.123047)
                mul r4.x, r4.x, l(1.943660)
                div r4.x, r4.x, l(3.141593)
                div r4.x, r4.x, l(2.000000)
                sincos r4.x, null, r4.x
                mul r4.x, r4.x, l(2.000000)
                add r4.x, r4.x, l(2.500000)  // r4.x <- zoom
                nop 
                mul r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
                mov r4.yz, l(-0.000000,-1.000000,-1.000000,-0.000000)
                add r3.xy, r3.xyxx, r4.yzyy
                mul r3.xy, r3.xyxx, r4.xxxx
                
                #line 76
                add r4.x, r0.y, l(12345.123047)
                mul r4.x, r4.x, l(1.191551)
                div r4.x, r4.x, l(3.141593)
                div r4.x, r4.x, l(2.000000)
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.191551)
                div r4.z, r4.z, l(3.141593)
                div r4.z, r4.z, l(2.000000)
                mul r4.z, r4.z, l(1.618034)
                div r4.y, r4.z, l(2.718282)
                add r4.xy, r0.xxxx, r4.xyxx
                sincos r4.xy, null, r4.xyxx
                mul r4.xy, r4.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r4.x <- a.x; r4.y <- a.y
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.509861)
                div r4.z, r4.z, l(3.141593)
                div r5.x, r4.z, l(2.000000)
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.509861)
                div r4.z, r4.z, l(3.141593)
                div r4.z, r4.z, l(2.000000)
                mul r4.z, r4.z, l(1.618034)
                div r5.y, r4.z, l(2.718282)
                add r4.zw, r0.xxxx, r5.xxxy
                sincos r4.zw, null, r4.zzzw
                mul r4.zw, r4.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)  // r4.z <- b.x; r4.w <- b.y
                add r5.x, r0.y, l(12345.123047)
                mul r5.x, r5.x, l(1.828171)
                div r5.x, r5.x, l(3.141593)
                div r5.x, r5.x, l(2.000000)
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.828171)
                div r5.z, r5.z, l(3.141593)
                div r5.z, r5.z, l(2.000000)
                mul r5.z, r5.z, l(1.618034)
                div r5.y, r5.z, l(2.718282)
                add r5.xy, r0.xxxx, r5.xyxx
                sincos r5.xy, null, r5.xyxx
                mul r5.xy, r5.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r5.x <- c.x; r5.y <- c.y
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.853519)
                div r5.z, r5.z, l(3.141593)
                div r6.x, r5.z, l(2.000000)
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.853519)
                div r5.z, r5.z, l(3.141593)
                div r5.z, r5.z, l(2.000000)
                mul r5.z, r5.z, l(1.618034)
                div r6.y, r5.z, l(2.718282)
                add r5.zw, r0.xxxx, r6.xxxy
                sincos r5.zw, null, r5.zzzw
                mul r5.zw, r5.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)  // r5.z <- d.x; r5.w <- d.y
                nop 
                nop 
                mov r3.xy, r3.xyxx
                mov r4.xy, r4.xyxx
                
                #line 63
                mul r6.x, r3.x, r4.x
                mul r6.y, r3.y, r4.y
                mov r6.y, -r6.y
                add r6.x, r6.y, r6.x  // r6.x <- <cmul return value>.x
                mul r4.x, r3.y, r4.x
                mul r4.y, r3.x, r4.y
                add r6.y, r4.y, r4.x  // r6.y <- <cmul return value>.y
                
                #line 80
                add r4.xy, r4.zwzz, r6.xyxx
                nop 
                mov r5.xy, r5.xyxx
                
                #line 63
                mul r4.z, r3.x, r5.x
                mul r4.w, r3.y, r5.y
                mov r4.w, -r4.w
                add r6.x, r4.w, r4.z
                mul r3.y, r3.y, r5.x
                mul r3.x, r3.x, r5.y
                add r6.y, r3.x, r3.y
                
                #line 80
                add r3.xy, r5.zwzz, r6.xyxx
                
                #line 67
                mul r4.z, r3.x, r4.x
                mul r4.w, r3.y, r4.y
                add r5.x, r4.w, r4.z
                mul r4.y, r3.x, r4.y
                mul r4.x, r3.y, r4.x
                mov r4.x, -r4.x
                add r5.y, r4.x, r4.y
                dp2 r3.x, r3.xyxx, r3.xyxx
                div r3.xy, r5.xyxx, r3.xxxx  // r3.x <- <cdiv return value>.x; r3.y <- <cdiv return value>.y
                
                #line 80
                mov r3.xy, r3.xyxx  // r3.x <- <mobius return value>.x; r3.y <- <mobius return value>.y
                
                #line 86
                mov r3.xy, r3.xyxx  // r3.x <- mob.x; r3.y <- mob.y
                mul r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
                mul r3.xy, r3.xyxx, l(3.141593, 3.141593, 0.000000, 0.000000)  // r3.x <- <map return value>.x; r3.y <- <map return value>.y
                
                #line 104
                mov r3.xy, r3.xyxx  // r3.x <- mb.x; r3.y <- mb.y
                nop 
                mov r3.zw, r3.zzzw
                
                #line 85
                add r4.x, r0.y, l(12345.123047)
                mul r4.x, r4.x, l(1.943660)
                div r4.x, r4.x, l(3.141593)
                div r4.x, r4.x, l(2.000000)
                sincos r4.x, null, r4.x
                mul r4.x, r4.x, l(2.000000)
                add r4.x, r4.x, l(2.500000)  // r4.x <- zoom
                nop 
                mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
                mov r4.yz, l(-0.000000,-1.000000,-1.000000,-0.000000)
                add r3.zw, r3.zzzw, r4.yyyz
                mul r3.zw, r3.zzzw, r4.xxxx
                
                #line 76
                add r4.x, r0.y, l(12345.123047)
                mul r4.x, r4.x, l(1.191551)
                div r4.x, r4.x, l(3.141593)
                div r4.x, r4.x, l(2.000000)
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.191551)
                div r4.z, r4.z, l(3.141593)
                div r4.z, r4.z, l(2.000000)
                mul r4.z, r4.z, l(1.618034)
                div r4.y, r4.z, l(2.718282)
                add r4.xy, r0.xxxx, r4.xyxx
                sincos r4.xy, null, r4.xyxx
                mul r4.xy, r4.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r4.x <- a.x; r4.y <- a.y
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.509861)
                div r4.z, r4.z, l(3.141593)
                div r5.x, r4.z, l(2.000000)
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.509861)
                div r4.z, r4.z, l(3.141593)
                div r4.z, r4.z, l(2.000000)
                mul r4.z, r4.z, l(1.618034)
                div r5.y, r4.z, l(2.718282)
                add r4.zw, r0.xxxx, r5.xxxy
                sincos r4.zw, null, r4.zzzw
                mul r4.zw, r4.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)  // r4.z <- b.x; r4.w <- b.y
                add r5.x, r0.y, l(12345.123047)
                mul r5.x, r5.x, l(1.828171)
                div r5.x, r5.x, l(3.141593)
                div r5.x, r5.x, l(2.000000)
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.828171)
                div r5.z, r5.z, l(3.141593)
                div r5.z, r5.z, l(2.000000)
                mul r5.z, r5.z, l(1.618034)
                div r5.y, r5.z, l(2.718282)
                add r5.xy, r0.xxxx, r5.xyxx
                sincos r5.xy, null, r5.xyxx
                mul r5.xy, r5.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r5.x <- c.x; r5.y <- c.y
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.853519)
                div r5.z, r5.z, l(3.141593)
                div r6.x, r5.z, l(2.000000)
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.853519)
                div r5.z, r5.z, l(3.141593)
                div r5.z, r5.z, l(2.000000)
                mul r5.z, r5.z, l(1.618034)
                div r6.y, r5.z, l(2.718282)
                add r5.zw, r0.xxxx, r6.xxxy
                sincos r5.zw, null, r5.zzzw
                mul r5.zw, r5.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)  // r5.z <- d.x; r5.w <- d.y
                nop 
                nop 
                mov r3.zw, r3.zzzw
                mov r4.xy, r4.xyxx
                
                #line 63
                mul r6.x, r3.z, r4.x
                mul r6.y, r3.w, r4.y
                mov r6.y, -r6.y
                add r6.x, r6.y, r6.x  // r6.x <- <cmul return value>.x
                mul r4.x, r3.w, r4.x
                mul r4.y, r3.z, r4.y
                add r6.y, r4.y, r4.x  // r6.y <- <cmul return value>.y
                
                #line 80
                add r4.xy, r4.zwzz, r6.xyxx
                nop 
                mov r5.xy, r5.xyxx
                
                #line 63
                mul r4.z, r3.z, r5.x
                mul r4.w, r3.w, r5.y
                mov r4.w, -r4.w
                add r6.x, r4.w, r4.z
                mul r3.w, r3.w, r5.x
                mul r3.z, r3.z, r5.y
                add r6.y, r3.z, r3.w
                
                #line 80
                add r3.zw, r5.zzzw, r6.xxxy
                
                #line 67
                mul r4.z, r3.z, r4.x
                mul r4.w, r3.w, r4.y
                add r5.x, r4.w, r4.z
                mul r4.y, r3.z, r4.y
                mul r4.x, r3.w, r4.x
                mov r4.x, -r4.x
                add r5.y, r4.x, r4.y
                dp2 r3.z, r3.zwzz, r3.zwzz
                div r3.zw, r5.xxxy, r3.zzzz  // r3.z <- <cdiv return value>.x; r3.w <- <cdiv return value>.y
                
                #line 80
                mov r3.zw, r3.zzzw  // r3.z <- <mobius return value>.x; r3.w <- <mobius return value>.y
                
                #line 86
                mov r3.zw, r3.zzzw  // r3.z <- mob.x; r3.w <- mob.y
                mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
                mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 3.141593, 3.141593)  // r3.z <- <map return value>.x; r3.w <- <map return value>.y
                
                #line 105
                mov r3.zw, r3.zzzw  // r3.z <- mc.x; r3.w <- mc.y
                nop 
                mov r2.zw, r2.zzzw
                
                #line 85
                add r4.x, r0.y, l(12345.123047)
                mul r4.x, r4.x, l(1.943660)
                div r4.x, r4.x, l(3.141593)
                div r4.x, r4.x, l(2.000000)
                sincos r4.x, null, r4.x
                mul r4.x, r4.x, l(2.000000)
                add r4.x, r4.x, l(2.500000)  // r4.x <- zoom
                nop 
                mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
                mov r4.yz, l(-0.000000,-1.000000,-1.000000,-0.000000)
                add r2.zw, r2.zzzw, r4.yyyz
                mul r2.zw, r2.zzzw, r4.xxxx
                
                #line 76
                add r4.x, r0.y, l(12345.123047)
                mul r4.x, r4.x, l(1.191551)
                div r4.x, r4.x, l(3.141593)
                div r4.x, r4.x, l(2.000000)
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.191551)
                div r4.z, r4.z, l(3.141593)
                div r4.z, r4.z, l(2.000000)
                mul r4.z, r4.z, l(1.618034)
                div r4.y, r4.z, l(2.718282)
                add r4.xy, r0.xxxx, r4.xyxx
                sincos r4.xy, null, r4.xyxx
                mul r4.xy, r4.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r4.x <- a.x; r4.y <- a.y
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.509861)
                div r4.z, r4.z, l(3.141593)
                div r5.x, r4.z, l(2.000000)
                add r4.z, r0.y, l(12345.123047)
                mul r4.z, r4.z, l(1.509861)
                div r4.z, r4.z, l(3.141593)
                div r4.z, r4.z, l(2.000000)
                mul r4.z, r4.z, l(1.618034)
                div r5.y, r4.z, l(2.718282)
                add r4.zw, r0.xxxx, r5.xxxy
                sincos r4.zw, null, r4.zzzw
                mul r4.zw, r4.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)  // r4.z <- b.x; r4.w <- b.y
                add r5.x, r0.y, l(12345.123047)
                mul r5.x, r5.x, l(1.828171)
                div r5.x, r5.x, l(3.141593)
                div r5.x, r5.x, l(2.000000)
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.828171)
                div r5.z, r5.z, l(3.141593)
                div r5.z, r5.z, l(2.000000)
                mul r5.z, r5.z, l(1.618034)
                div r5.y, r5.z, l(2.718282)
                add r5.xy, r0.xxxx, r5.xyxx
                sincos r5.xy, null, r5.xyxx
                mul r5.xy, r5.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r5.x <- c.x; r5.y <- c.y
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.853519)
                div r5.z, r5.z, l(3.141593)
                div r6.x, r5.z, l(2.000000)
                add r5.z, r0.y, l(12345.123047)
                mul r5.z, r5.z, l(1.853519)
                div r5.z, r5.z, l(3.141593)
                div r5.z, r5.z, l(2.000000)
                mul r5.z, r5.z, l(1.618034)
                div r6.y, r5.z, l(2.718282)
                add r5.zw, r0.xxxx, r6.xxxy
                sincos r5.zw, null, r5.zzzw
                mul r5.zw, r5.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)  // r5.z <- d.x; r5.w <- d.y
                nop 
                nop 
                mov r2.zw, r2.zzzw
                mov r4.xy, r4.xyxx
                
                #line 63
                mul r6.x, r2.z, r4.x
                mul r6.y, r2.w, r4.y
                mov r6.y, -r6.y
                add r6.x, r6.y, r6.x  // r6.x <- <cmul return value>.x
                mul r4.x, r2.w, r4.x
                mul r4.y, r2.z, r4.y
                add r6.y, r4.y, r4.x  // r6.y <- <cmul return value>.y
                
                #line 80
                add r4.xy, r4.zwzz, r6.xyxx
                nop 
                mov r5.xy, r5.xyxx
                
                #line 63
                mul r4.z, r2.z, r5.x
                mul r4.w, r2.w, r5.y
                mov r4.w, -r4.w
                add r6.x, r4.w, r4.z
                mul r2.w, r2.w, r5.x
                mul r2.z, r2.z, r5.y
                add r6.y, r2.z, r2.w
                
                #line 80
                add r2.zw, r5.zzzw, r6.xxxy
                
                #line 67
                mul r4.z, r2.z, r4.x
                mul r4.w, r2.w, r4.y
                add r5.x, r4.w, r4.z
                mul r4.y, r2.z, r4.y
                mul r4.x, r2.w, r4.x
                mov r4.x, -r4.x
                add r5.y, r4.x, r4.y
                dp2 r2.z, r2.zwzz, r2.zwzz
                div r2.zw, r5.xxxy, r2.zzzz  // r2.z <- <cdiv return value>.x; r2.w <- <cdiv return value>.y
                
                #line 80
                mov r2.zw, r2.zzzw  // r2.z <- <mobius return value>.x; r2.w <- <mobius return value>.y
                
                #line 86
                mov r2.zw, r2.zzzw  // r2.z <- mob.x; r2.w <- mob.y
                mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
                mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 3.141593, 3.141593)  // r2.z <- <map return value>.x; r2.w <- <map return value>.y
                
                #line 106
                mov r2.zw, r2.zzzw  // r2.z <- md.x; r2.w <- md.y
                mov r4.xy, -r1.zwzz
                add r4.xy, r3.xyxx, r4.xyxx
                dp2 r4.x, r4.xyxx, r4.xyxx
                sqrt r4.x, r4.x  // r4.x <- da
                mov r3.xy, -r3.xyxx
                add r3.xy, r3.xyxx, r3.zwzz
                dp2 r3.x, r3.xyxx, r3.xyxx
                sqrt r3.x, r3.x  // r3.x <- db
                mov r3.yz, -r3.zzwz
                add r3.yz, r2.zzwz, r3.yyzy
                dp2 r3.y, r3.yzyy, r3.yzyy
                sqrt r3.y, r3.y  // r3.y <- dc
                mov r2.zw, -r2.zzzw
                add r1.zw, r1.zzzw, r2.zzzw
                dp2 r1.z, r1.zwzz, r1.zwzz
                sqrt r1.z, r1.z  // r1.z <- dd
                div r1.w, r4.x, r2.x
                div r2.z, r3.x, r2.y
                max r1.w, r1.w, r2.z
                div r2.x, r3.y, r2.x
                max r1.w, r1.w, r2.x
                div r1.z, r1.z, r2.y
                max r1.z, r1.z, r1.w  // r1.z <- stretch
                mov r1.z, r1.z  // r1.z <- magnification
                
                #line 117
                nop 
                mov r0.zw, r0.zzzw
                
                #line 85
                add r1.w, r0.y, l(12345.123047)
                mul r1.w, r1.w, l(1.943660)
                div r1.w, r1.w, l(3.141593)
                div r1.w, r1.w, l(2.000000)
                sincos r1.w, null, r1.w
                mul r1.w, r1.w, l(2.000000)
                add r1.w, r1.w, l(2.500000)  // r1.w <- zoom
                nop 
                mul r2.xy, r0.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000)
                mov r2.zw, l(-0.000000,-0.000000,-1.000000,-1.000000)
                add r2.xy, r2.zwzz, r2.xyxx
                mul r2.xy, r1.wwww, r2.xyxx
                
                #line 76
                add r1.w, r0.y, l(12345.123047)
                mul r1.w, r1.w, l(1.191551)
                div r1.w, r1.w, l(3.141593)
                div r3.x, r1.w, l(2.000000)
                add r1.w, r0.y, l(12345.123047)
                mul r1.w, r1.w, l(1.191551)
                div r1.w, r1.w, l(3.141593)
                div r1.w, r1.w, l(2.000000)
                mul r1.w, r1.w, l(1.618034)
                div r3.y, r1.w, l(2.718282)
                add r2.zw, r0.xxxx, r3.xxxy
                sincos r2.zw, null, r2.zzzw
                mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)  // r2.z <- a.x; r2.w <- a.y
                add r1.w, r0.y, l(12345.123047)
                mul r1.w, r1.w, l(1.509861)
                div r1.w, r1.w, l(3.141593)
                div r3.x, r1.w, l(2.000000)
                add r1.w, r0.y, l(12345.123047)
                mul r1.w, r1.w, l(1.509861)
                div r1.w, r1.w, l(3.141593)
                div r1.w, r1.w, l(2.000000)
                mul r1.w, r1.w, l(1.618034)
                div r3.y, r1.w, l(2.718282)
                add r3.xy, r0.xxxx, r3.xyxx
                sincos r3.xy, null, r3.xyxx
                mul r3.xy, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r3.x <- b.x; r3.y <- b.y
                add r1.w, r0.y, l(12345.123047)
                mul r1.w, r1.w, l(1.828171)
                div r1.w, r1.w, l(3.141593)
                div r4.x, r1.w, l(2.000000)
                add r1.w, r0.y, l(12345.123047)
                mul r1.w, r1.w, l(1.828171)
                div r1.w, r1.w, l(3.141593)
                div r1.w, r1.w, l(2.000000)
                mul r1.w, r1.w, l(1.618034)
                div r4.y, r1.w, l(2.718282)
                add r3.zw, r0.xxxx, r4.xxxy
                sincos r3.zw, null, r3.zzzw
                mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)  // r3.z <- c.x; r3.w <- c.y
                add r1.w, r0.y, l(12345.123047)
                mul r1.w, r1.w, l(1.853519)
                div r1.w, r1.w, l(3.141593)
                div r4.x, r1.w, l(2.000000)
                add r1.w, r0.y, l(12345.123047)
                mul r1.w, r1.w, l(1.853519)
                div r1.w, r1.w, l(3.141593)
                div r1.w, r1.w, l(2.000000)
                mul r1.w, r1.w, l(1.618034)
                div r4.y, r1.w, l(2.718282)
                add r4.xy, r0.xxxx, r4.xyxx
                sincos r4.xy, null, r4.xyxx
                mul r4.xy, r4.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)  // r4.x <- d.x; r4.y <- d.y
                nop 
                nop 
                mov r2.xy, r2.xyxx
                mov r2.zw, r2.zzzw
                
                #line 63
                mul r0.x, r2.z, r2.x
                mul r1.w, r2.w, r2.y
                mov r1.w, -r1.w
                add r5.x, r0.x, r1.w  // r5.x <- <cmul return value>.x
                mul r0.x, r2.z, r2.y
                mul r1.w, r2.w, r2.x
                add r5.y, r0.x, r1.w  // r5.y <- <cmul return value>.y
                
                #line 80
                add r2.zw, r3.xxxy, r5.xxxy
                nop 
                mov r3.zw, r3.zzzw
                
                #line 63
                mul r0.x, r2.x, r3.z
                mul r1.w, r2.y, r3.w
                mov r1.w, -r1.w
                add r3.x, r0.x, r1.w  // r3.x <- <cmul return value>.x
                mul r0.x, r2.y, r3.z
                mul r1.w, r2.x, r3.w
                add r3.y, r0.x, r1.w  // r3.y <- <cmul return value>.y
                
                #line 80
                add r2.xy, r4.xyxx, r3.xyxx
                
                #line 67
                mul r0.x, r2.x, r2.z
                mul r1.w, r2.y, r2.w
                add r3.x, r0.x, r1.w
                mul r0.x, r2.x, r2.w
                mul r1.w, r2.y, r2.z
                mov r1.w, -r1.w
                add r3.y, r0.x, r1.w
                dp2 r0.x, r2.xyxx, r2.xyxx
                div r2.xy, r3.xyxx, r0.xxxx  // r2.x <- <cdiv return value>.x; r2.y <- <cdiv return value>.y
                
                #line 80
                mov r2.xy, r2.xyxx  // r2.x <- <mobius return value>.x; r2.y <- <mobius return value>.y
                
                #line 86
                mov r2.xy, r2.xyxx  // r2.x <- mob.x; r2.y <- mob.y
                mul r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
                mul r2.xy, r2.xyxx, l(3.141593, 3.141593, 0.000000, 0.000000)  // r2.x <- <map return value>.x; r2.y <- <map return value>.y
                
                #line 117
                mov r2.xy, r2.xyxx  // r2.x <- <iterate return value>.x; r2.y <- <iterate return value>.y
                
                #line 142
                mov r1.z, r1.z  // r1.z <- magnification
                mov r2.xy, r2.xyxx  // r2.x <- next.x; r2.y <- next.y
                mov r1.x, r1.x  // r1.x <- weight
                add r0.x, r0.y, l(12345.123047)
                mul r0.x, r0.x, l(1.473243)
                div r0.x, r0.x, l(3.141593)
                div r0.x, r0.x, l(2.000000)
                mul r0.x, r0.x, l(3.141593)
                mul r0.x, r0.x, l(1.000000)
                sincos r0.x, null, r0.x
                mul r0.x, r0.x, l(0.100000)
                add r0.x, r0.x, l(1.000000)
                div r0.x, l(1.000000), r0.x
                add r1.z, r1.z, l(1.000000)
                div r1.z, l(1.000000), r1.z
                sqrt r1.z, r1.z
                mov r1.w, l(-0.000000)
                add r0.x, r0.x, r1.w
                add r1.z, r1.w, r1.z
                div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
                mul r0.x, r0.x, r1.z
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)
                mul r1.z, r0.x, l(-2.000000)
                add r1.z, r1.z, l(3.000000)
                mul r0.x, r0.x, r0.x
                mul r0.x, r0.x, r1.z
                mul r0.x, r0.x, r1.x  // r0.x <- ifs
                sqrt r1.z, r0.x  // r1.z <- ifsSqrt
                mul r2.xy, r1.xxxx, r2.xyxx
                mov r1.x, -r1.x
                add r1.x, r1.x, l(1.000000)
                mul r0.zw, r0.zzzw, r1.xxxx
                add r0.zw, r0.zzzw, r2.xxxy  // r0.z <- uv.x; r0.w <- uv.y
                mul r1.xw, r0.zzzw, l(2.000000, 0.000000, 0.000000, 2.000000)
                mov r2.xy, l(-1.000000,-1.000000,-0.000000,-0.000000)
                add r2.xy, r1.xwxx, r2.xyxx
                mul r1.xw, r0.zzzw, l(2.000000, 0.000000, 0.000000, 2.000000)
                mov r3.xy, l(-1.000000,-1.000000,-0.000000,-0.000000)
                add r1.xw, r1.xxxw, r3.xxxy
                dp2 r1.x, r1.xwxx, r1.xwxx
                sqrt r1.x, r1.x
                mov r1.x, -r1.x
                add r1.x, r1.x, l(1.000000)
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)
                sqrt r2.z, r1.x
                dp3 r1.x, r2.xyzx, r2.xyzx
                rsq r1.x, r1.x
                mul r1.x, r1.x, r2.z
                mul r1.x, r1.z, r1.x  // r1.x <- delta
                
                #line 153
                mov r1.x, -r1.x
                add r1.x, r1.x, l(1.000000)
                mul r1.x, r0.x, r1.x
                add r1.x, r1.x, r1.y  // r1.x <- depth
                ne r0.x, r0.x, l(0.000000)
                if_nz r0.x
                  nop 
                  mul r1.yw, r0.zzzw, l(0.000000, 2.000000, 0.000000, 2.000000)
                  mov r2.xy, l(-1.000000,-1.000000,-0.000000,-0.000000)
                  add r1.yw, r1.yyyw, r2.xxxy
                
                #line 93
                  mul r1.yw, r1.yyyw, l(0.000000, 0.500000, 0.000000, 0.500000)
                  add r1.yw, r1.yyyw, l(0.000000, 0.500000, 0.000000, 0.500000)
                  mul r1.yw, r1.yyyw, l(0.000000, 3.141593, 0.000000, 3.141593)
                  sincos null, r1.yw, r1.yyyw
                  mov r2.xy, -r1.ywyy
                  max r2.zw, r1.yyyw, r2.xxxy
                  mov r3.xy, -r2.zwzz
                  add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  sqrt r3.xy, r3.xyxx
                  mul r3.zw, r2.zzzw, l(0.000000, 0.000000, -0.018729, -0.018729)
                  add r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.074261, 0.074261)
                  mul r3.zw, r2.zzzw, r3.zzzw
                  add r3.zw, r3.zzzw, l(0.000000, 0.000000, -0.212114, -0.212114)
                  mul r2.zw, r2.zzzw, r3.zzzw
                  add r2.zw, r2.zzzw, l(0.000000, 0.000000, 1.570729, 1.570729)
                  mul r2.zw, r3.xxxy, r2.zzzw
                  mul r3.xy, r2.zwzz, l(-2.000000, -2.000000, 0.000000, 0.000000)
                  add r3.xy, r3.xyxx, l(3.141593, 3.141593, 0.000000, 0.000000)
                  lt r1.yw, r1.yyyw, r2.xxxy
                  and r1.yw, r1.yyyw, r3.xxxy
                  add r1.yw, r1.yyyw, r2.zzzw
                  div r1.yw, r1.yyyw, l(0.000000, 3.141593, 0.000000, 3.141593)
                  mov r1.yw, -r1.yyyw
                  add r0.zw, r1.yyyw, l(0.000000, 0.000000, 1.000000, 1.000000)  // r0.z <- <spiral return value>.x; r0.w <- <spiral return value>.y
                
                #line 157
                  mov r0.zw, r0.zzzw  // r0.z <- uv.x; r0.w <- uv.y
                endif 
                mov r1.z, r1.z  // r1.z <- ifs
                
                #line 169
                add r0.x, r0.y, l(12345.123047)
                mul r0.x, r0.x, l(1.205629)
                div r0.x, r0.x, l(3.141593)
                div r0.x, r0.x, l(2.000000)  // r0.x <- shift
                mul r1.y, r1.x, l(3.141593)
                mul r1.y, r1.y, l(5.000000)
                mul r1.y, r1.z, r1.y
                add r0.y, r0.y, l(12345.123047)
                mul r0.y, r0.y, l(1.430991)
                div r0.y, r0.y, l(3.141593)
                div r0.y, r0.y, l(2.000000)
                sincos r0.y, null, r0.y
                add r0.y, r0.y, l(2.000000)
                mul r0.y, r0.y, r1.y  // r0.y <- stripes
                mul r0.w, r0.w, l(2.000000)
                mov r1.y, l(-1.000000)
                add r0.w, r0.w, r1.y
                mul r0.z, r0.z, l(2.000000)
                mov r1.y, l(-1.000000)
                add r0.z, r0.z, r1.y
                mov r1.y, -r0.w
                max r1.y, r0.w, r1.y
                mov r1.z, -r0.z
                max r1.w, r0.z, r1.z
                min r2.x, r1.w, r1.y
                max r2.y, r1.w, r1.y
                div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
                mul r2.x, r2.y, r2.x
                mul r2.y, r2.x, r2.x
                mul r2.z, r2.y, l(0.020835)
                add r2.z, r2.z, l(-0.085133)
                mul r2.z, r2.z, r2.y
                add r2.z, r2.z, l(0.180141)
                mul r2.z, r2.z, r2.y
                add r2.z, r2.z, l(-0.330299)
                mul r2.y, r2.z, r2.y
                add r2.y, r2.y, l(0.999866)
                mul r2.x, r2.y, r2.x
                lt r1.y, r1.w, r1.y
                mul r1.w, r2.x, l(-2.000000)
                add r1.w, r1.w, l(1.570796)
                and r1.y, r1.y, r1.w
                add r1.y, r2.x, r1.y
                lt r1.z, r0.z, r1.z
                and r1.z, r1.z, l(0xc0490fdb)
                add r1.y, r1.z, r1.y
                min r1.z, r0.z, r0.w
                max r0.z, r0.z, r0.w
                mov r0.w, -r1.z
                lt r0.w, r1.z, r0.w
                mov r1.z, -r0.z
                ge r0.z, r0.z, r1.z
                and r0.z, r0.z, r0.w
                mov r0.w, -r1.y
                movc r0.z, r0.z, r0.w, r1.y
                sincos null, r0.z, r0.z
                mov r0.w, -r0.z
                max r1.y, r0.w, r0.z
                mov r1.z, -r1.y
                add r1.z, r1.z, l(1.000000)
                sqrt r1.z, r1.z
                mul r1.w, r1.y, l(-0.018729)
                add r1.w, r1.w, l(0.074261)
                mul r1.w, r1.y, r1.w
                add r1.w, r1.w, l(-0.212114)
                mul r1.y, r1.y, r1.w
                add r1.y, r1.y, l(1.570729)
                mul r1.y, r1.z, r1.y
                mul r1.z, r1.y, l(-2.000000)
                add r1.z, r1.z, l(3.141593)
                lt r0.z, r0.z, r0.w
                and r0.z, r0.z, r1.z
                add r0.z, r0.z, r1.y
                div r0.z, r0.z, l(3.141593)  // r0.z <- black
                sincos null, r0.y, r0.y
                mov r0.w, -r0.y
                max r1.y, r0.w, r0.y
                mov r1.z, -r1.y
                add r1.z, r1.z, l(1.000000)
                sqrt r1.z, r1.z
                mul r1.w, r1.y, l(-0.018729)
                add r1.w, r1.w, l(0.074261)
                mul r1.w, r1.y, r1.w
                add r1.w, r1.w, l(-0.212114)
                mul r1.y, r1.y, r1.w
                add r1.y, r1.y, l(1.570729)
                mul r1.y, r1.z, r1.y
                mul r1.z, r1.y, l(-2.000000)
                add r1.z, r1.z, l(3.141593)
                lt r0.y, r0.y, r0.w
                and r0.y, r0.y, r1.z
                add r0.y, r0.y, r1.y
                div r0.y, r0.y, l(3.141593)
                mov r0.w, l(-0.750000)
                add r1.y, r0.w, l(1.000000)
                add r0.y, r0.w, r0.y
                div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
                mul r0.y, r0.w, r0.y
                max r0.y, r0.y, l(0.000000)
                min r0.y, r0.y, l(1.000000)
                mul r0.w, r0.y, l(-2.000000)
                add r0.w, r0.w, l(3.000000)
                mul r0.y, r0.y, r0.y
                mul r0.y, r0.y, r0.w  // r0.y <- white
                
                #line 176
                mul r0.w, r1.x, l(3.141593)
                mul r0.w, r0.w, l(2.000000)
                add r0.w, r0.x, r0.w
                sincos null, r0.w, r0.w
                mov r1.y, -r0.w
                max r1.z, r0.w, r1.y
                mov r1.w, -r1.z
                add r1.w, r1.w, l(1.000000)
                sqrt r1.w, r1.w
                mul r2.x, r1.z, l(-0.018729)
                add r2.x, r2.x, l(0.074261)
                mul r2.x, r1.z, r2.x
                add r2.x, r2.x, l(-0.212114)
                mul r1.z, r1.z, r2.x
                add r1.z, r1.z, l(1.570729)
                mul r1.z, r1.w, r1.z
                mul r1.w, r1.z, l(-2.000000)
                add r1.w, r1.w, l(3.141593)
                lt r0.w, r0.w, r1.y
                and r0.w, r0.w, r1.w
                add r0.w, r0.w, r1.z
                div r2.x, r0.w, l(3.141593)
                mul r0.w, r1.x, l(3.141593)
                mul r0.w, r0.w, l(2.000000)
                add r0.w, r0.w, l(4.188790)
                add r0.w, r0.x, r0.w
                sincos null, r0.w, r0.w
                mov r1.y, -r0.w
                max r1.z, r0.w, r1.y
                mov r1.w, -r1.z
                add r1.w, r1.w, l(1.000000)
                sqrt r1.w, r1.w
                mul r2.w, r1.z, l(-0.018729)
                add r2.w, r2.w, l(0.074261)
                mul r2.w, r1.z, r2.w
                add r2.w, r2.w, l(-0.212114)
                mul r1.z, r1.z, r2.w
                add r1.z, r1.z, l(1.570729)
                mul r1.z, r1.w, r1.z
                mul r1.w, r1.z, l(-2.000000)
                add r1.w, r1.w, l(3.141593)
                lt r0.w, r0.w, r1.y
                and r0.w, r0.w, r1.w
                add r0.w, r0.w, r1.z
                div r2.y, r0.w, l(3.141593)
                mul r0.w, r1.x, l(3.141593)
                mul r0.w, r0.w, l(2.000000)
                add r0.w, r0.w, l(2.094395)
                add r0.x, r0.x, r0.w
                sincos null, r0.x, r0.x
                mov r0.w, -r0.x
                max r1.x, r0.w, r0.x
                mov r1.y, -r1.x
                add r1.y, r1.y, l(1.000000)
                sqrt r1.y, r1.y
                mul r1.z, r1.x, l(-0.018729)
                add r1.z, r1.z, l(0.074261)
                mul r1.z, r1.x, r1.z
                add r1.z, r1.z, l(-0.212114)
                mul r1.x, r1.x, r1.z
                add r1.x, r1.x, l(1.570729)
                mul r1.x, r1.y, r1.x
                mul r1.y, r1.x, l(-2.000000)
                add r1.y, r1.y, l(3.141593)
                lt r0.x, r0.x, r0.w
                and r0.x, r0.x, r1.y
                add r0.x, r0.x, r1.x
                div r2.z, r0.x, l(3.141593)
                mul r0.xzw, r0.zzzz, r2.xxyz
                add r0.xyz, r0.yyyy, r0.xzwx  // r0.x <- final.x; r0.y <- final.y; r0.z <- final.z
                
                #line 187
                mov r0.xyz, r0.xyzx  // r0.x <- fragColor.x; r0.y <- fragColor.y; r0.z <- fragColor.z
                mov r0.w, l(1.000000)  // r0.w <- fragColor.w
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 818 instruction slots used
                            
            };
        }

    }

}

